metadata={systemName:"broker.sample.003",displayName:"Broker Sample 003",description:"An example broker that accesses JSONPlaceholder. 003"},ondescribe=async function({configuration:e}){postSchema({objects:{todo:{displayName:"TODO",description:"Manages a TODO list",properties:{id:{displayName:"ID",type:"number"},userId:{displayName:"User ID",type:"number"},title:{displayName:"Title",type:"string"},completed:{displayName:"Completed",type:"boolean"}},methods:{get:{displayName:"Get TODO",type:"read",inputs:["id"],outputs:["id","userId","title","completed"]},getParams:{displayName:"Get TODO",type:"read",parameters:{pid:{displayName:"param1",description:"Description Of Param 1",type:"number"}},requiredParameters:["pid"],outputs:["id"]}}}}})},onexecute=async function({objectName:e,methodName:t,parameters:a,properties:r,configuration:s,schema:o}){switch(e){case"todo":await async function(e,t,a){switch(e){case"get":await function(e){return new Promise((t,a)=>{var r=new XMLHttpRequest;if(r.onreadystatechange=function(){try{if(4!==r.readyState)return;if(200!==r.status)throw new Error("Failed with status "+r.status);var e=JSON.parse(r.responseText);postResult({id:e.id,userId:e.userId,title:e.title,completed:e.completed}),t()}catch(e){a(e)}},"number"!=typeof e.id)throw new Error('properties["id"] is not of type number');r.open("GET","https://jsonplaceholder.typicode.com/todos/"+encodeURIComponent(e.id)),r.setRequestHeader("test","test value"),r.send()})}(t);break;case"getParams":await function(e){return new Promise((t,a)=>{try{postResult({id:e.pid}),t()}catch(e){a(e)}})}(a);break;default:throw new Error("The method "+e+" is not supported.")}}(t,r,a);break;default:throw new Error("The object "+e+" is not supported.")}};
//# sourceMappingURL=index.js.map
